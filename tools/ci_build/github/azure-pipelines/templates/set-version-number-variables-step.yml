# Sets version number from VERSION.txt into a variable. As well as the git commit hash.

steps:
- task: CmdLine@2
  displayName: 'Set Version Number variables for  Windows'
  inputs:
    script: |
        SETLOCAL EnableDelayedExpansion
        set /p _OnnxRuntimeVersion=<$(Build.SourcesDirectory)\VERSION_NUMBER 
        echo '##vso[task.setvariable variable=OnnxRuntimeVersion;]%_OnnxRuntimeVersion%'
        
        FOR /F "tokens=* USEBACKQ" %%F IN (`git rev-parse --short=8 HEAD`) DO (
            SET _OnnxRuntimeGitCommitHash=%%F
        )
        echo '##vso[task.setvariable variable=OnnxRuntimeGitCommitHash;]%_OnnxRuntimeGitCommitHash%'

        echo "Env(_OnnxRuntimeVersion) = %_OnnxRuntimeVersion%"
        echo Var(OnnxRuntimeVersion) = variables['OnnxRuntimeVersion']
        echo "Env(_OnnxRuntimeGitCommitHash) = %_OnnxRuntimeGitCommitHash%"
        echo Var(OnnxRuntimeGitCommitHash) = variables['OnnxRuntimeGitCommitHash']

    workingDirectory: '$(Build.SourcesDirectory)'
  condition: eq(variables['Agent.OS'], 'Windows_NT') 

- task: CmdLine@2
  displayName: 'Set version number variables for Unix'
  inputs:
    script: |
        _OnnxRuntimeVersion=$(head -1 $(Build.SourcesDirectory)/VERSION_NUMBER) 
        echo '##vso[task.setvariable variable=OnnxRuntimeVersion;]$_OnnxRuntimeVersion'
        
        _OnnxRuntimeGitCommitHash=$(git rev-parse --short=8 HEAD)
        echo '##vso[task.setvariable variable=OnnxRuntimeGitCommitHash;]$_OnnxRuntimeGitCommitHash'

        echo "Env(_OnnxRuntimeVersion) = $_OnnxRuntimeVersion"
        #echo Var(OnnxRuntimeVersion) = variables['OnnxRuntimeVersion']
        echo "Var(OnnxRuntimeVersion) = $ONNXRUNTIMEVERSION"
        echo 'Var(OnnxRuntimeVersion) = ${{variables.OnnxRuntimeVersion}}'
        echo "Env(_OnnxRuntimeGitCommitHash) = $_OnnxRuntimeGitCommitHash"
        #echo Var(OnnxRuntimeGitCommitHash) = variables['OnnxRuntimeGitCommitHash']
        echo "Var(OnnxRuntimeGitCommitHash) = $ONNXRUNTIMEGITCOMMITHASH"
        echo 'Var(OnnxRuntimeGitCommitHash) = ${{variables.OnnxRuntimeGitCommitHash}}'

    workingDirectory: '$(Build.SourcesDirectory)'
  condition: not(eq(variables['Agent.OS'], 'Windows_NT'))