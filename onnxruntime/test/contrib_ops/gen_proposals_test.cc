// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

#include "gtest/gtest.h"
#include "test/providers/provider_test_utils.h"
#include "contrib_ops/cpu/gen_proposals_eigen_utils.h"
#include <vector>
using namespace std;

namespace onnxruntime {
namespace test {

TEST(GenerateProposalsTest, PositiveTest) {
  OpTester test("GenerateProposals", 1, onnxruntime::kMSDomain);
  const int img_count = 1;
  const int A = 2;
  const int H = 4;
  const int W = 5;

  vector<float> scores{
      5.44218998e-03f, 1.19207997e-03f, 1.12379994e-03f, 1.17181998e-03f,
      1.20544003e-03f, 6.17993006e-04f, 1.05261997e-05f, 8.91025957e-06f,
      9.29536981e-09f, 6.09605013e-05f, 4.72735002e-04f, 1.13482002e-10f,
      1.50015003e-05f, 4.45032993e-06f, 3.21612994e-08f, 8.02662980e-04f,
      1.40488002e-04f, 3.12508007e-07f, 3.02616991e-06f, 1.97759000e-08f,
      2.66913995e-02f, 5.26766013e-03f, 5.05053019e-03f, 5.62100019e-03f,
      5.37420018e-03f, 5.26280981e-03f, 2.48894998e-04f, 1.06842002e-04f,
      3.92931997e-06f, 1.79388002e-03f, 4.79440019e-03f, 3.41609990e-07f,
      5.20430971e-04f, 3.34090000e-05f, 2.19159006e-07f, 2.28786003e-03f,
      5.16703985e-05f, 4.04523007e-06f, 1.79227004e-06f, 5.32449000e-08f};
  vector<float> bbx{
      -1.65040009e-02f, -1.84051003e-02f, -1.85930002e-02f, -2.08263006e-02f,
      -1.83814000e-02f, -2.89172009e-02f, -3.89706008e-02f, -7.52277970e-02f,
      -1.54091999e-01f, -2.55433004e-02f, -1.77490003e-02f, -1.10340998e-01f,
      -4.20190990e-02f, -2.71421000e-02f, 6.89801015e-03f, 5.71171008e-02f,
      -1.75665006e-01f, 2.30021998e-02f, 3.08554992e-02f, -1.39333997e-02f,
      3.40579003e-01f, 3.91070992e-01f, 3.91624004e-01f, 3.92527014e-01f,
      3.91445011e-01f, 3.79328012e-01f, 4.26631987e-01f, 3.64892989e-01f,
      2.76894987e-01f, 5.13985991e-01f, 3.79999995e-01f, 1.80457994e-01f,
      4.37402993e-01f, 4.18545991e-01f, 2.51549989e-01f, 4.48318988e-01f,
      1.68564007e-01f, 4.65440989e-01f, 4.21891987e-01f, 4.45928007e-01f,
      3.27155995e-03f, 3.71480011e-03f, 3.60032008e-03f, 4.27092984e-03f,
      3.74579988e-03f, 5.95752988e-03f, -3.14473989e-03f, 3.52022005e-03f,
      -1.88564006e-02f, 1.65188999e-03f, 1.73791999e-03f, -3.56074013e-02f,
      -1.66615995e-04f, 3.14146001e-03f, -1.11830998e-02f, -5.35363983e-03f,
      6.49790000e-03f, -9.27671045e-03f, -2.83346009e-02f, -1.61233004e-02f,
      -2.15505004e-01f, -2.19910994e-01f, -2.20872998e-01f, -2.12831005e-01f,
      -2.19145000e-01f, -2.27687001e-01f, -3.43973994e-01f, -2.75869995e-01f,
      -3.19516987e-01f, -2.50418007e-01f, -2.48537004e-01f, -5.08224010e-01f,
      -2.28724003e-01f, -2.82402009e-01f, -3.75815988e-01f, -2.86352992e-01f,
      -5.28333001e-02f, -4.43836004e-01f, -4.55134988e-01f, -4.34897989e-01f,
      -5.65053988e-03f, -9.25739005e-04f, -1.06790999e-03f, -2.37016007e-03f,
      -9.71166010e-04f, -8.90910998e-03f, -1.17592998e-02f, -2.08992008e-02f,
      -4.94231991e-02f, 6.63906988e-03f, 3.20469006e-03f, -6.44695014e-02f,
      -3.11607006e-03f, 2.02738005e-03f, 1.48096997e-02f, 4.39785011e-02f,
      -8.28424022e-02f, 3.62076014e-02f, 2.71668993e-02f, 1.38250999e-02f,
      6.76669031e-02f, 1.03252999e-01f, 1.03255004e-01f, 9.89722982e-02f,
      1.03646003e-01f, 4.79663983e-02f, 1.11014001e-01f, 9.31736007e-02f,
      1.15768999e-01f, 1.04014002e-01f, -8.90677981e-03f, 1.13103002e-01f,
      1.33085996e-01f, 1.25405997e-01f, 1.50051996e-01f, -1.13038003e-01f,
      7.01059997e-02f, 1.79651007e-01f, 1.41055003e-01f, 1.62841007e-01f,
      -1.00247003e-02f, -8.17587040e-03f, -8.32176022e-03f, -8.90108012e-03f,
      -8.13035015e-03f, -1.77263003e-02f, -3.69572006e-02f, -3.51580009e-02f,
      -5.92143014e-02f, -1.80795006e-02f, -5.46086021e-03f, -4.10550982e-02f,
      -1.83081999e-02f, -2.15411000e-02f, -1.17953997e-02f, 3.33894007e-02f,
      -5.29635996e-02f, -6.97528012e-03f, -3.15250992e-03f, -3.27355005e-02f,
      1.29676998e-01f, 1.16080999e-01f, 1.15947001e-01f, 1.21797003e-01f,
      1.16089001e-01f, 1.44875005e-01f, 1.15617000e-01f, 1.31586999e-01f,
      1.74735002e-02f, 1.21973999e-01f, 1.31596997e-01f, 2.48907991e-02f,
      6.18605018e-02f, 1.12855002e-01f, -6.99798986e-02f, 9.58312973e-02f,
      1.53593004e-01f, -8.75087008e-02f, -4.92327996e-02f, -3.32239009e-02f};
  vector<float> im_info{60, 80, 0.166667f};
  vector<float> anchors{-38, -16, 53, 31, -120, -120, 135, 135};

  vector<float> rois_gt{0.f, 0.f, 0.f, 79.f, 59.f, 0.f, 0.f, 5.0005703f, 51.6324f, 42.6950f, 0.f,
                        24.13628387f, 7.51243401f, 79.f, 45.0663f, 0.f, 0.f, 7.50924301f, 67.4779f,
                        45.0336f, 0.f, 0.f, 23.09477997f, 50.61448669f, 59.f, 0.f, 0.f, 39.52141571f,
                        51.44710541f, 59.f, 0.f, 23.57396317f, 29.98791885f, 79.f, 59.f, 0.f, 0.f,
                        41.90219116f, 79.f, 59.f, 0.f, 0.f, 23.30098343f, 78.2413f, 58.7287f};
  vector<float> rois_probs_gt{2.66913995e-02f,
                              5.44218998e-03f,
                              1.20544003e-03f,
                              1.19207997e-03f,
                              6.17993006e-04f,
                              4.72735002e-04f,
                              6.09605013e-05f,
                              1.50015003e-05f,
                              8.91025957e-06f};

  test.AddInput<float>("scores", vector<int64_t>{img_count, A, H, W}, scores);
  test.AddInput<float>("bbox_deltas", vector<int64_t>{img_count, 4 * A, H, W}, bbx);
  test.AddInput<float>("im_info", vector<int64_t>{img_count, 3}, im_info);
  test.AddInput<float>("anchors", vector<int64_t>{A, 4}, anchors);

  test.AddAttribute("spatial_scale", 1.0f / 16.0f);
  test.AddAttribute("pre_nms_topN", static_cast<int64_t>(6000));
  test.AddAttribute("post_nms_topN", static_cast<int64_t>(300));
  test.AddAttribute("nms_thresh", 0.7f);
  test.AddAttribute("min_size", 16.0f);

  test.AddOutput<float>("rois", vector<int64_t>{9, 5}, rois_gt);
  test.AddOutput<float>("rois_probs", vector<int64_t>{int64_t(rois_probs_gt.size())}, rois_probs_gt);

  test.Run();
}
}  // namespace test
}  // namespace onnxruntime
